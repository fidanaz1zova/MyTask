"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return findLocal;
    }
});
const _errors = require("../../../errors");
const _createLocalReq = require("../../../utilities/createLocalReq");
const _find = /*#__PURE__*/ _interop_require_default(require("../find"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
async function findLocal(payload, options) {
    const { collection: collectionSlug, currentDepth, depth, disableErrors, draft = false, limit, overrideAccess = true, page, pagination = true, showHiddenFields, sort, where } = options;
    const collection = payload.collections[collectionSlug];
    if (!collection) {
        throw new _errors.APIError(`The collection with slug ${String(collectionSlug)} can't be found. Find Operation.`);
    }
    const req = (0, _createLocalReq.createLocalReq)(options, payload);
    return (0, _find.default)({
        collection,
        currentDepth,
        depth,
        disableErrors,
        draft,
        limit,
        overrideAccess,
        page,
        pagination,
        req,
        showHiddenFields,
        sort,
        where
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb2xsZWN0aW9ucy9vcGVyYXRpb25zL2xvY2FsL2ZpbmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHZW5lcmF0ZWRUeXBlcyB9IGZyb20gJy4uLy4uLy4uLydcbmltcG9ydCB0eXBlIHsgUGFnaW5hdGVkRG9jcyB9IGZyb20gJy4uLy4uLy4uL2RhdGFiYXNlL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCwgUmVxdWVzdENvbnRleHQgfSBmcm9tICcuLi8uLi8uLi9leHByZXNzL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkIH0gZnJvbSAnLi4vLi4vLi4vcGF5bG9hZCdcbmltcG9ydCB0eXBlIHsgRG9jdW1lbnQsIFdoZXJlIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMnXG5cbmltcG9ydCB7IEFQSUVycm9yIH0gZnJvbSAnLi4vLi4vLi4vZXJyb3JzJ1xuaW1wb3J0IHsgY3JlYXRlTG9jYWxSZXEgfSBmcm9tICcuLi8uLi8uLi91dGlsaXRpZXMvY3JlYXRlTG9jYWxSZXEnXG5pbXBvcnQgZmluZCBmcm9tICcuLi9maW5kJ1xuXG5leHBvcnQgdHlwZSBPcHRpb25zPFQgZXh0ZW5kcyBrZXlvZiBHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXT4gPSB7XG4gIGNvbGxlY3Rpb246IFRcbiAgLyoqXG4gICAqIGNvbnRleHQsIHdoaWNoIHdpbGwgdGhlbiBiZSBwYXNzZWQgdG8gcmVxLmNvbnRleHQsIHdoaWNoIGNhbiBiZSByZWFkIGJ5IGhvb2tzXG4gICAqL1xuICBjb250ZXh0PzogUmVxdWVzdENvbnRleHRcbiAgY3VycmVudERlcHRoPzogbnVtYmVyXG4gIGRlcHRoPzogbnVtYmVyXG4gIGRpc2FibGVFcnJvcnM/OiBib29sZWFuXG4gIGRyYWZ0PzogYm9vbGVhblxuICBmYWxsYmFja0xvY2FsZT86IHN0cmluZ1xuICBsaW1pdD86IG51bWJlclxuICBsb2NhbGU/OiBzdHJpbmdcbiAgb3ZlcnJpZGVBY2Nlc3M/OiBib29sZWFuXG4gIHBhZ2U/OiBudW1iZXJcbiAgcGFnaW5hdGlvbj86IGJvb2xlYW5cbiAgcmVxPzogUGF5bG9hZFJlcXVlc3RcbiAgc2hvd0hpZGRlbkZpZWxkcz86IGJvb2xlYW5cbiAgc29ydD86IHN0cmluZ1xuICB1c2VyPzogRG9jdW1lbnRcbiAgd2hlcmU/OiBXaGVyZVxufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBmaW5kTG9jYWw8VCBleHRlbmRzIGtleW9mIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddPihcbiAgcGF5bG9hZDogUGF5bG9hZCxcbiAgb3B0aW9uczogT3B0aW9uczxUPixcbik6IFByb21pc2U8UGFnaW5hdGVkRG9jczxHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXVtUXT4+IHtcbiAgY29uc3Qge1xuICAgIGNvbGxlY3Rpb246IGNvbGxlY3Rpb25TbHVnLFxuICAgIGN1cnJlbnREZXB0aCxcbiAgICBkZXB0aCxcbiAgICBkaXNhYmxlRXJyb3JzLFxuICAgIGRyYWZ0ID0gZmFsc2UsXG4gICAgbGltaXQsXG4gICAgb3ZlcnJpZGVBY2Nlc3MgPSB0cnVlLFxuICAgIHBhZ2UsXG4gICAgcGFnaW5hdGlvbiA9IHRydWUsXG4gICAgc2hvd0hpZGRlbkZpZWxkcyxcbiAgICBzb3J0LFxuICAgIHdoZXJlLFxuICB9ID0gb3B0aW9uc1xuXG4gIGNvbnN0IGNvbGxlY3Rpb24gPSBwYXlsb2FkLmNvbGxlY3Rpb25zW2NvbGxlY3Rpb25TbHVnXVxuXG4gIGlmICghY29sbGVjdGlvbikge1xuICAgIHRocm93IG5ldyBBUElFcnJvcihcbiAgICAgIGBUaGUgY29sbGVjdGlvbiB3aXRoIHNsdWcgJHtTdHJpbmcoY29sbGVjdGlvblNsdWcpfSBjYW4ndCBiZSBmb3VuZC4gRmluZCBPcGVyYXRpb24uYCxcbiAgICApXG4gIH1cblxuICBjb25zdCByZXEgPSBjcmVhdGVMb2NhbFJlcShvcHRpb25zLCBwYXlsb2FkKVxuXG4gIHJldHVybiBmaW5kPEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddW1RdPih7XG4gICAgY29sbGVjdGlvbixcbiAgICBjdXJyZW50RGVwdGgsXG4gICAgZGVwdGgsXG4gICAgZGlzYWJsZUVycm9ycyxcbiAgICBkcmFmdCxcbiAgICBsaW1pdCxcbiAgICBvdmVycmlkZUFjY2VzcyxcbiAgICBwYWdlLFxuICAgIHBhZ2luYXRpb24sXG4gICAgcmVxLFxuICAgIHNob3dIaWRkZW5GaWVsZHMsXG4gICAgc29ydCxcbiAgICB3aGVyZSxcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJmaW5kTG9jYWwiLCJwYXlsb2FkIiwib3B0aW9ucyIsImNvbGxlY3Rpb24iLCJjb2xsZWN0aW9uU2x1ZyIsImN1cnJlbnREZXB0aCIsImRlcHRoIiwiZGlzYWJsZUVycm9ycyIsImRyYWZ0IiwibGltaXQiLCJvdmVycmlkZUFjY2VzcyIsInBhZ2UiLCJwYWdpbmF0aW9uIiwic2hvd0hpZGRlbkZpZWxkcyIsInNvcnQiLCJ3aGVyZSIsImNvbGxlY3Rpb25zIiwiQVBJRXJyb3IiLCJTdHJpbmciLCJyZXEiLCJjcmVhdGVMb2NhbFJlcSIsImZpbmQiXSwibWFwcGluZ3MiOiI7Ozs7K0JBaUNBOzs7ZUFBOEJBOzs7d0JBM0JMO2dDQUNNOzZEQUNkOzs7Ozs7QUF5QkYsZUFBZUEsVUFDNUJDLE9BQWdCLEVBQ2hCQyxPQUFtQjtJQUVuQixNQUFNLEVBQ0pDLFlBQVlDLGNBQWMsRUFDMUJDLFlBQVksRUFDWkMsS0FBSyxFQUNMQyxhQUFhLEVBQ2JDLFFBQVEsS0FBSyxFQUNiQyxLQUFLLEVBQ0xDLGlCQUFpQixJQUFJLEVBQ3JCQyxJQUFJLEVBQ0pDLGFBQWEsSUFBSSxFQUNqQkMsZ0JBQWdCLEVBQ2hCQyxJQUFJLEVBQ0pDLEtBQUssRUFDTixHQUFHYjtJQUVKLE1BQU1DLGFBQWFGLFFBQVFlLFdBQVcsQ0FBQ1osZUFBZTtJQUV0RCxJQUFJLENBQUNELFlBQVk7UUFDZixNQUFNLElBQUljLGdCQUFRLENBQ2hCLENBQUMseUJBQXlCLEVBQUVDLE9BQU9kLGdCQUFnQixnQ0FBZ0MsQ0FBQztJQUV4RjtJQUVBLE1BQU1lLE1BQU1DLElBQUFBLDhCQUFjLEVBQUNsQixTQUFTRDtJQUVwQyxPQUFPb0IsSUFBQUEsYUFBSSxFQUFtQztRQUM1Q2xCO1FBQ0FFO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FPO1FBQ0FOO1FBQ0FDO1FBQ0FDO0lBQ0Y7QUFDRiJ9