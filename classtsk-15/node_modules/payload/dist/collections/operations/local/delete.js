"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _errors = require("../../../errors");
const _createLocalReq = require("../../../utilities/createLocalReq");
const _delete = /*#__PURE__*/ _interop_require_default(require("../delete"));
const _deleteByID = /*#__PURE__*/ _interop_require_default(require("../deleteByID"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
async function deleteLocal(payload, options) {
    const { id, collection: collectionSlug, depth, overrideAccess = true, showHiddenFields, where } = options;
    const collection = payload.collections[collectionSlug];
    if (!collection) {
        throw new _errors.APIError(`The collection with slug ${String(collectionSlug)} can't be found. Delete Operation.`);
    }
    const req = (0, _createLocalReq.createLocalReq)(options, payload);
    const args = {
        id,
        collection,
        depth,
        overrideAccess,
        req,
        showHiddenFields,
        where
    };
    if (options.id) {
        return (0, _deleteByID.default)(args);
    }
    return (0, _delete.default)(args);
}
const _default = deleteLocal;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb2xsZWN0aW9ucy9vcGVyYXRpb25zL2xvY2FsL2RlbGV0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEdlbmVyYXRlZFR5cGVzIH0gZnJvbSAnLi4vLi4vLi4vJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCwgUmVxdWVzdENvbnRleHQgfSBmcm9tICcuLi8uLi8uLi9leHByZXNzL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkIH0gZnJvbSAnLi4vLi4vLi4vcGF5bG9hZCdcbmltcG9ydCB0eXBlIHsgRG9jdW1lbnQsIFdoZXJlIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMnXG5pbXBvcnQgdHlwZSB7IEJ1bGtPcGVyYXRpb25SZXN1bHQgfSBmcm9tICcuLi8uLi9jb25maWcvdHlwZXMnXG5cbmltcG9ydCB7IEFQSUVycm9yIH0gZnJvbSAnLi4vLi4vLi4vZXJyb3JzJ1xuaW1wb3J0IHsgY3JlYXRlTG9jYWxSZXEgfSBmcm9tICcuLi8uLi8uLi91dGlsaXRpZXMvY3JlYXRlTG9jYWxSZXEnXG5pbXBvcnQgZGVsZXRlT3BlcmF0aW9uIGZyb20gJy4uL2RlbGV0ZSdcbmltcG9ydCBkZWxldGVCeUlEIGZyb20gJy4uL2RlbGV0ZUJ5SUQnXG5cbmV4cG9ydCB0eXBlIEJhc2VPcHRpb25zPFQgZXh0ZW5kcyBrZXlvZiBHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXT4gPSB7XG4gIGNvbGxlY3Rpb246IFRcbiAgLyoqXG4gICAqIGNvbnRleHQsIHdoaWNoIHdpbGwgdGhlbiBiZSBwYXNzZWQgdG8gcmVxLmNvbnRleHQsIHdoaWNoIGNhbiBiZSByZWFkIGJ5IGhvb2tzXG4gICAqL1xuICBjb250ZXh0PzogUmVxdWVzdENvbnRleHRcbiAgZGVwdGg/OiBudW1iZXJcbiAgZmFsbGJhY2tMb2NhbGU/OiBzdHJpbmdcbiAgbG9jYWxlPzogc3RyaW5nXG4gIG92ZXJyaWRlQWNjZXNzPzogYm9vbGVhblxuICByZXE/OiBQYXlsb2FkUmVxdWVzdFxuICBzaG93SGlkZGVuRmllbGRzPzogYm9vbGVhblxuICB1c2VyPzogRG9jdW1lbnRcbn1cblxuZXhwb3J0IHR5cGUgQnlJRE9wdGlvbnM8VCBleHRlbmRzIGtleW9mIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddPiA9IEJhc2VPcHRpb25zPFQ+ICYge1xuICBpZDogbnVtYmVyIHwgc3RyaW5nXG4gIHdoZXJlPzogbmV2ZXJcbn1cblxuZXhwb3J0IHR5cGUgTWFueU9wdGlvbnM8VCBleHRlbmRzIGtleW9mIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddPiA9IEJhc2VPcHRpb25zPFQ+ICYge1xuICBpZD86IG5ldmVyXG4gIHdoZXJlOiBXaGVyZVxufVxuXG5leHBvcnQgdHlwZSBPcHRpb25zPFRTbHVnIGV4dGVuZHMga2V5b2YgR2VuZXJhdGVkVHlwZXNbJ2NvbGxlY3Rpb25zJ10+ID1cbiAgfCBCeUlET3B0aW9uczxUU2x1Zz5cbiAgfCBNYW55T3B0aW9uczxUU2x1Zz5cblxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlTG9jYWw8VFNsdWcgZXh0ZW5kcyBrZXlvZiBHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXT4oXG4gIHBheWxvYWQ6IFBheWxvYWQsXG4gIG9wdGlvbnM6IEJ5SURPcHRpb25zPFRTbHVnPixcbik6IFByb21pc2U8R2VuZXJhdGVkVHlwZXNbJ2NvbGxlY3Rpb25zJ11bVFNsdWddPlxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlTG9jYWw8VFNsdWcgZXh0ZW5kcyBrZXlvZiBHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXT4oXG4gIHBheWxvYWQ6IFBheWxvYWQsXG4gIG9wdGlvbnM6IE1hbnlPcHRpb25zPFRTbHVnPixcbik6IFByb21pc2U8QnVsa09wZXJhdGlvblJlc3VsdDxUU2x1Zz4+XG5hc3luYyBmdW5jdGlvbiBkZWxldGVMb2NhbDxUU2x1ZyBleHRlbmRzIGtleW9mIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddPihcbiAgcGF5bG9hZDogUGF5bG9hZCxcbiAgb3B0aW9uczogT3B0aW9uczxUU2x1Zz4sXG4pOiBQcm9taXNlPEJ1bGtPcGVyYXRpb25SZXN1bHQ8VFNsdWc+IHwgR2VuZXJhdGVkVHlwZXNbJ2NvbGxlY3Rpb25zJ11bVFNsdWddPlxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlTG9jYWw8VFNsdWcgZXh0ZW5kcyBrZXlvZiBHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXT4oXG4gIHBheWxvYWQ6IFBheWxvYWQsXG4gIG9wdGlvbnM6IE9wdGlvbnM8VFNsdWc+LFxuKTogUHJvbWlzZTxCdWxrT3BlcmF0aW9uUmVzdWx0PFRTbHVnPiB8IEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddW1RTbHVnXT4ge1xuICBjb25zdCB7XG4gICAgaWQsXG4gICAgY29sbGVjdGlvbjogY29sbGVjdGlvblNsdWcsXG4gICAgZGVwdGgsXG4gICAgb3ZlcnJpZGVBY2Nlc3MgPSB0cnVlLFxuICAgIHNob3dIaWRkZW5GaWVsZHMsXG4gICAgd2hlcmUsXG4gIH0gPSBvcHRpb25zXG5cbiAgY29uc3QgY29sbGVjdGlvbiA9IHBheWxvYWQuY29sbGVjdGlvbnNbY29sbGVjdGlvblNsdWddXG5cbiAgaWYgKCFjb2xsZWN0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEFQSUVycm9yKFxuICAgICAgYFRoZSBjb2xsZWN0aW9uIHdpdGggc2x1ZyAke1N0cmluZyhjb2xsZWN0aW9uU2x1Zyl9IGNhbid0IGJlIGZvdW5kLiBEZWxldGUgT3BlcmF0aW9uLmAsXG4gICAgKVxuICB9XG5cbiAgY29uc3QgcmVxID0gY3JlYXRlTG9jYWxSZXEob3B0aW9ucywgcGF5bG9hZClcblxuICBjb25zdCBhcmdzID0ge1xuICAgIGlkLFxuICAgIGNvbGxlY3Rpb24sXG4gICAgZGVwdGgsXG4gICAgb3ZlcnJpZGVBY2Nlc3MsXG4gICAgcmVxLFxuICAgIHNob3dIaWRkZW5GaWVsZHMsXG4gICAgd2hlcmUsXG4gIH1cblxuICBpZiAob3B0aW9ucy5pZCkge1xuICAgIHJldHVybiBkZWxldGVCeUlEPFRTbHVnPihhcmdzKVxuICB9XG4gIHJldHVybiBkZWxldGVPcGVyYXRpb248VFNsdWc+KGFyZ3MpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGRlbGV0ZUxvY2FsXG4iXSwibmFtZXMiOlsiZGVsZXRlTG9jYWwiLCJwYXlsb2FkIiwib3B0aW9ucyIsImlkIiwiY29sbGVjdGlvbiIsImNvbGxlY3Rpb25TbHVnIiwiZGVwdGgiLCJvdmVycmlkZUFjY2VzcyIsInNob3dIaWRkZW5GaWVsZHMiLCJ3aGVyZSIsImNvbGxlY3Rpb25zIiwiQVBJRXJyb3IiLCJTdHJpbmciLCJyZXEiLCJjcmVhdGVMb2NhbFJlcSIsImFyZ3MiLCJkZWxldGVCeUlEIiwiZGVsZXRlT3BlcmF0aW9uIl0sIm1hcHBpbmdzIjoiOzs7OytCQTJGQTs7O2VBQUE7Ozt3QkFyRnlCO2dDQUNNOytEQUNIO21FQUNMOzs7Ozs7QUEyQ3ZCLGVBQWVBLFlBQ2JDLE9BQWdCLEVBQ2hCQyxPQUF1QjtJQUV2QixNQUFNLEVBQ0pDLEVBQUUsRUFDRkMsWUFBWUMsY0FBYyxFQUMxQkMsS0FBSyxFQUNMQyxpQkFBaUIsSUFBSSxFQUNyQkMsZ0JBQWdCLEVBQ2hCQyxLQUFLLEVBQ04sR0FBR1A7SUFFSixNQUFNRSxhQUFhSCxRQUFRUyxXQUFXLENBQUNMLGVBQWU7SUFFdEQsSUFBSSxDQUFDRCxZQUFZO1FBQ2YsTUFBTSxJQUFJTyxnQkFBUSxDQUNoQixDQUFDLHlCQUF5QixFQUFFQyxPQUFPUCxnQkFBZ0Isa0NBQWtDLENBQUM7SUFFMUY7SUFFQSxNQUFNUSxNQUFNQyxJQUFBQSw4QkFBYyxFQUFDWixTQUFTRDtJQUVwQyxNQUFNYyxPQUFPO1FBQ1haO1FBQ0FDO1FBQ0FFO1FBQ0FDO1FBQ0FNO1FBQ0FMO1FBQ0FDO0lBQ0Y7SUFFQSxJQUFJUCxRQUFRQyxFQUFFLEVBQUU7UUFDZCxPQUFPYSxJQUFBQSxtQkFBVSxFQUFRRDtJQUMzQjtJQUNBLE9BQU9FLElBQUFBLGVBQWUsRUFBUUY7QUFDaEM7TUFFQSxXQUFlZiJ9