"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactrouterdom = require("react-router-dom");
const _Chevron = /*#__PURE__*/ _interop_require_default(require("../../icons/Chevron"));
const _Edit = /*#__PURE__*/ _interop_require_default(require("../../icons/Edit"));
const _Link = /*#__PURE__*/ _interop_require_default(require("../../icons/Link"));
const _Plus = /*#__PURE__*/ _interop_require_default(require("../../icons/Plus"));
const _Swap = /*#__PURE__*/ _interop_require_default(require("../../icons/Swap"));
const _X = /*#__PURE__*/ _interop_require_default(require("../../icons/X"));
const _Tooltip = /*#__PURE__*/ _interop_require_default(require("../Tooltip"));
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const icons = {
    chevron: _Chevron.default,
    edit: _Edit.default,
    link: _Link.default,
    plus: _Plus.default,
    swap: _Swap.default,
    x: _X.default
};
const baseClass = 'btn';
const ButtonContents = ({ children, icon, showTooltip, tooltip })=>{
    const BuiltInIcon = icons[icon];
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, tooltip && /*#__PURE__*/ _react.default.createElement(_Tooltip.default, {
        className: `${baseClass}__tooltip`,
        show: showTooltip
    }, tooltip), /*#__PURE__*/ _react.default.createElement("span", {
        className: `${baseClass}__content`
    }, children && /*#__PURE__*/ _react.default.createElement("span", {
        className: `${baseClass}__label`
    }, children), icon && /*#__PURE__*/ _react.default.createElement("span", {
        className: `${baseClass}__icon`
    }, /*#__PURE__*/ (0, _react.isValidElement)(icon) && icon, BuiltInIcon && /*#__PURE__*/ _react.default.createElement(BuiltInIcon, null))));
};
const Button = /*#__PURE__*/ (0, _react.forwardRef)((props, ref)=>{
    const { id, 'aria-label': ariaLabel, buttonStyle = 'primary', children, className, disabled, el = 'button', icon, iconPosition = 'right', iconStyle = 'without-border', newTab, onClick, round, size = 'medium', to, tooltip, type = 'button', url } = props;
    const [showTooltip, setShowTooltip] = _react.default.useState(false);
    const classes = [
        baseClass,
        className && className,
        buttonStyle && `${baseClass}--style-${buttonStyle}`,
        icon && `${baseClass}--icon`,
        iconStyle && `${baseClass}--icon-style-${iconStyle}`,
        icon && !children && `${baseClass}--icon-only`,
        disabled && `${baseClass}--disabled`,
        round && `${baseClass}--round`,
        size && `${baseClass}--size-${size}`,
        iconPosition && `${baseClass}--icon-position-${iconPosition}`,
        tooltip && `${baseClass}--has-tooltip`
    ].filter(Boolean).join(' ');
    function handleClick(event) {
        setShowTooltip(false);
        if (type !== 'submit' && onClick) event.preventDefault();
        if (onClick) onClick(event);
    }
    const buttonProps = {
        id,
        'aria-disabled': disabled,
        'aria-label': ariaLabel,
        className: classes,
        disabled,
        onClick: !disabled ? handleClick : undefined,
        onMouseEnter: tooltip ? ()=>setShowTooltip(true) : undefined,
        onMouseLeave: tooltip ? ()=>setShowTooltip(false) : undefined,
        rel: newTab ? 'noopener noreferrer' : undefined,
        target: newTab ? '_blank' : undefined,
        type
    };
    switch(el){
        case 'link':
            return /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Link, {
                ...buttonProps,
                to: to || url
            }, /*#__PURE__*/ _react.default.createElement(ButtonContents, {
                icon: icon,
                showTooltip: showTooltip,
                tooltip: tooltip
            }, children));
        case 'anchor':
            return /*#__PURE__*/ _react.default.createElement("a", {
                ...buttonProps,
                href: url,
                ref: ref
            }, /*#__PURE__*/ _react.default.createElement(ButtonContents, {
                icon: icon,
                showTooltip: showTooltip,
                tooltip: tooltip
            }, children));
        default:
            const Tag = el // eslint-disable-line no-case-declarations
            ;
            return /*#__PURE__*/ _react.default.createElement(Tag, {
                ref: ref,
                type: "submit",
                ...buttonProps
            }, /*#__PURE__*/ _react.default.createElement(ButtonContents, {
                icon: icon,
                showTooltip: showTooltip,
                tooltip: tooltip
            }, children));
    }
});
const _default = Button;

//# sourceMappingURL=data:application/json;base64,