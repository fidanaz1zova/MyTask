"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _flatley = require("flatley");
/**
 * Reduce flattened form fields (Fields) to just map to the respective values instead of the full FormField object
 *
 * @param unflatten This also unflattens the data if `unflatten` is true. The unflattened data should match the original data structure
 * @param ignoreDisableFormData - if true, will include fields that have `disableFormData` set to true, for example, blocks or arrays fields.
 *
 */ const reduceFieldsToValues = (fields, unflatten, ignoreDisableFormData)=>{
    const data = {};
    Object.keys(fields).forEach((key)=>{
        if (ignoreDisableFormData === true || !fields[key].disableFormData) {
            data[key] = fields[key].value;
        }
    });
    if (unflatten) {
        return (0, _flatley.unflatten)(data, {
            safe: true
        });
    }
    return data;
};
const _default = reduceFieldsToValues;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL0Zvcm0vcmVkdWNlRmllbGRzVG9WYWx1ZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5mbGF0dGVuIGFzIGZsYXRsZXlVbmZsYXR0ZW4gfSBmcm9tICdmbGF0bGV5J1xuXG5pbXBvcnQgdHlwZSB7IERhdGEsIEZpZWxkcyB9IGZyb20gJy4vdHlwZXMnXG5cbi8qKlxuICogUmVkdWNlIGZsYXR0ZW5lZCBmb3JtIGZpZWxkcyAoRmllbGRzKSB0byBqdXN0IG1hcCB0byB0aGUgcmVzcGVjdGl2ZSB2YWx1ZXMgaW5zdGVhZCBvZiB0aGUgZnVsbCBGb3JtRmllbGQgb2JqZWN0XG4gKlxuICogQHBhcmFtIHVuZmxhdHRlbiBUaGlzIGFsc28gdW5mbGF0dGVucyB0aGUgZGF0YSBpZiBgdW5mbGF0dGVuYCBpcyB0cnVlLiBUaGUgdW5mbGF0dGVuZWQgZGF0YSBzaG91bGQgbWF0Y2ggdGhlIG9yaWdpbmFsIGRhdGEgc3RydWN0dXJlXG4gKiBAcGFyYW0gaWdub3JlRGlzYWJsZUZvcm1EYXRhIC0gaWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIGZpZWxkcyB0aGF0IGhhdmUgYGRpc2FibGVGb3JtRGF0YWAgc2V0IHRvIHRydWUsIGZvciBleGFtcGxlLCBibG9ja3Mgb3IgYXJyYXlzIGZpZWxkcy5cbiAqXG4gKi9cbmNvbnN0IHJlZHVjZUZpZWxkc1RvVmFsdWVzID0gKFxuICBmaWVsZHM6IEZpZWxkcyxcbiAgdW5mbGF0dGVuPzogYm9vbGVhbixcbiAgaWdub3JlRGlzYWJsZUZvcm1EYXRhPzogYm9vbGVhbixcbik6IERhdGEgPT4ge1xuICBjb25zdCBkYXRhID0ge31cblxuICBPYmplY3Qua2V5cyhmaWVsZHMpLmZvckVhY2goKGtleSkgPT4ge1xuICAgIGlmIChpZ25vcmVEaXNhYmxlRm9ybURhdGEgPT09IHRydWUgfHwgIWZpZWxkc1trZXldLmRpc2FibGVGb3JtRGF0YSkge1xuICAgICAgZGF0YVtrZXldID0gZmllbGRzW2tleV0udmFsdWVcbiAgICB9XG4gIH0pXG5cbiAgaWYgKHVuZmxhdHRlbikge1xuICAgIHJldHVybiBmbGF0bGV5VW5mbGF0dGVuKGRhdGEsIHsgc2FmZTogdHJ1ZSB9KVxuICB9XG5cbiAgcmV0dXJuIGRhdGFcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVkdWNlRmllbGRzVG9WYWx1ZXNcbiJdLCJuYW1lcyI6WyJyZWR1Y2VGaWVsZHNUb1ZhbHVlcyIsImZpZWxkcyIsInVuZmxhdHRlbiIsImlnbm9yZURpc2FibGVGb3JtRGF0YSIsImRhdGEiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImRpc2FibGVGb3JtRGF0YSIsInZhbHVlIiwiZmxhdGxleVVuZmxhdHRlbiIsInNhZmUiXSwibWFwcGluZ3MiOiI7Ozs7K0JBK0JBOzs7ZUFBQTs7O3lCQS9COEM7QUFJOUM7Ozs7OztDQU1DLEdBQ0QsTUFBTUEsdUJBQXVCLENBQzNCQyxRQUNBQyxXQUNBQztJQUVBLE1BQU1DLE9BQU8sQ0FBQztJQUVkQyxPQUFPQyxJQUFJLENBQUNMLFFBQVFNLE9BQU8sQ0FBQyxDQUFDQztRQUMzQixJQUFJTCwwQkFBMEIsUUFBUSxDQUFDRixNQUFNLENBQUNPLElBQUksQ0FBQ0MsZUFBZSxFQUFFO1lBQ2xFTCxJQUFJLENBQUNJLElBQUksR0FBR1AsTUFBTSxDQUFDTyxJQUFJLENBQUNFLEtBQUs7UUFDL0I7SUFDRjtJQUVBLElBQUlSLFdBQVc7UUFDYixPQUFPUyxJQUFBQSxrQkFBZ0IsRUFBQ1AsTUFBTTtZQUFFUSxNQUFNO1FBQUs7SUFDN0M7SUFFQSxPQUFPUjtBQUNUO01BRUEsV0FBZUoifQ==