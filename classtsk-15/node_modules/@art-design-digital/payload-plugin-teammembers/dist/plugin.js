"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.teamMemberPlugin = void 0;
var types_1 = require("./types");
var TeamMembers_1 = require("./collections/TeamMembers");
var Departments_1 = require("./collections/Departments");
var deepmerge_1 = __importDefault(require("./utils/deepmerge"));
var teamMemberPlugin = function (userPluginOptions) {
    return function (incomingConfig) {
        var pluginOptions = (0, deepmerge_1.default)(types_1.defaultPluginOptions, userPluginOptions || {});
        var config = __assign({}, incomingConfig);
        if (pluginOptions.enabled === false) {
            return config;
        }
        config.collections = __spreadArray(__spreadArray([], (config.collections || []), true), [
            (0, Departments_1.Departments)(pluginOptions),
            (0, TeamMembers_1.TeamMembers)(pluginOptions),
        ], false);
        return config;
    };
};
exports.teamMemberPlugin = teamMemberPlugin;
//# sourceMappingURL=plugin.js.map