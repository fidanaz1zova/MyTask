"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamMembers = void 0;
var translations_1 = require("../translations");
var types_1 = require("../types");
var deepmerge_1 = __importDefault(require("../utils/deepmerge"));
var TeamMembers = function (userPluginOptions) {
    var pluginOptions = (0, deepmerge_1.default)(types_1.defaultPluginOptions, userPluginOptions);
    return {
        slug: 'team-members',
        admin: {
            group: (pluginOptions === null || pluginOptions === void 0 ? void 0 : pluginOptions.adminGroup) || undefined,
            useAsTitle: 'name',
            defaultColumns: ['name', 'position', 'email'],
            description: translations_1.teamMemberTranslations.admin.description,
        },
        labels: {
            singular: translations_1.teamMemberTranslations.labels.singular,
            plural: translations_1.teamMemberTranslations.labels.plural,
        },
        access: {
            create: function () { return true; },
            read: function () { return true; },
            update: function () { return true; },
            delete: function () { return true; },
        },
        fields: [
            {
                name: 'name',
                label: translations_1.teamMemberTranslations.fields.name.label,
                type: 'text',
                required: true,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.name.admin.description,
                },
            },
            {
                name: 'position',
                label: translations_1.teamMemberTranslations.fields.position.label,
                type: 'text',
                localized: pluginOptions === null || pluginOptions === void 0 ? void 0 : pluginOptions.localized,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.position.admin.description,
                },
            },
            {
                type: 'relationship',
                relationTo: 'departments',
                name: 'department',
                label: translations_1.teamMemberTranslations.fields.department.label,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.department.admin.description,
                    allowCreate: true,
                },
                hasMany: false,
            },
            {
                type: 'email',
                name: 'email',
                label: translations_1.teamMemberTranslations.fields.email.label,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.email.admin.description,
                },
            },
            {
                type: 'text',
                name: 'phone',
                label: translations_1.teamMemberTranslations.fields.phone.label,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.phone.admin.description,
                },
            },
            {
                name: 'image',
                label: translations_1.teamMemberTranslations.fields.image.label,
                type: 'upload',
                relationTo: pluginOptions === null || pluginOptions === void 0 ? void 0 : pluginOptions.uploadsCollection,
                admin: {
                    description: translations_1.teamMemberTranslations.fields.image.admin.description,
                },
            },
        ],
    };
};
exports.TeamMembers = TeamMembers;
//# sourceMappingURL=TeamMembers.js.map